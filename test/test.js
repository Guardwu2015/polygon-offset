var tap = require('tap');
var Offset = require('../src/offset');

// CCW
var points = [
  [0,0], [0,100],
  [100,100], [100,0], [0,0]
];
var x = -10;


tap.test('polygon.offset', function(t) {

  t.test('data', function(t) {
    t.strictSame(new Offset(points).vertices, points.slice(0, points.length - 1), 'read');
    //t.strictSame(new Offset(points).vertices, points, 'stored');
    t.end();
  });


  t.test('margin', function(t) {
    t.strictSame(new Offset().data(points).margin(10), [ [ 0, -10 ],
  [ -3.0901699437494754, -9.510565162951535 ],
  [ -5.877852522924733, -8.090169943749473 ],
  [ -8.090169943749475, -5.87785252292473 ],
  [ -9.510565162951536, -3.0901699437494727 ],
  [ -10, 0 ],
  [ -10, 100 ],
  [ -9.510565162951535, 103.09016994374947 ],
  [ -8.090169943749475, 105.87785252292473 ],
  [ -5.87785252292473, 108.09016994374947 ],
  [ -3.0901699437494736, 109.51056516295154 ],
  [ 0, 110 ],
  [ 100, 110 ],
  [ 103.09016994374947, 109.51056516295154 ],
  [ 105.87785252292473, 108.09016994374947 ],
  [ 108.09016994374947, 105.87785252292473 ],
  [ 109.51056516295154, 103.09016994374947 ],
  [ 110, 100 ],
  [ 110, 0 ],
  [ 109.51056516295154, -3.090169943749474 ],
  [ 108.09016994374947, -5.877852522924732 ],
  [ 105.87785252292473, -8.090169943749475 ],
  [ 103.09016994374947, -9.510565162951535 ],
  [ 100, -10 ],
  [ 0, -10 ] ], 'margined, 5 points');
    t.end();
  });


  t.test('padding', function(t) {
    t.strictSame(new Offset(points).padding(10), [ [ 10, 10 ], [ 10, 90 ], [ 90, 90 ], [ 90, 10 ], [ 10, 10 ] ] , 'padded');
    t.end();
  });


  t.test('adaptive', function(t) {
    t.strictSame(new Offset(points).arcSegments(3).offset(-10), [ [ 10, 10 ], [ 10, 90 ], [ 90, 90 ], [ 90, 10 ], [ 10, 10 ] ], 'adaptively padded');
    t.end();
  });

  t.end();
});